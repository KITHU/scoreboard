{"version":3,"sources":["components/Context/index.js","components/Stats.js","components/Stopwatch.js","components/Header.js","components/Counter.js","components/Icon.js","components/Player.js","components/AddPlayerForm.js","components/App.js","index.js"],"names":["ScoreboardContext","React","createContext","Provider","Consumer","Stats","context","totalPlayers","players","length","totalPoints","reduce","total","player","score","className","Stopwatch","state","isRunning","elapsedTime","previousTime","tick","now","Date","setState","prevState","handleStopWatch","handleReset","this","intervalId","setInterval","clearInterval","seconds","Math","floor","onClick","Component","Header","title","Counter","index","actions","changeScore","Icon","props","viewBox","isHighScore","d","transform","width","height","Player","name","id","removePlayer","PureComponent","AddPlayerForm","playerInput","createRef","onSubmit","e","preventDefault","addPlayer","current","value","currentTarget","reset","type","ref","placeholder","App","prevPlayerId","handleScoreChange","diff","updatedPlayers","updatedPlayer","handleAddPlayer","newPlayer","Players","concat","handleRemovePlayer","filter","p","getHighScore","scores","map","highScore","max","key","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b152d28a.chunk.js","sourcesContent":["import React from 'react';\n\nconst ScoreboardContext = React.createContext();\n\nexport const Provider = ScoreboardContext.Provider;\nexport const Consumer = ScoreboardContext.Consumer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer } from './Context'\n\nconst Stats = () => {\n  return (\n    <Consumer>\n      { context => {\n        const totalPlayers = context.players.length;\n        const totalPoints = context.players.reduce((total, player) => {\n          return total + player.score;\n        }, 0);\n\n        return(\n          <table className=\"stats\">\n            <tbody>\n              <tr>\n                <td>Players:</td>\n                <td>{totalPlayers}</td>\n              </tr>\n              <tr>\n                <td>Total Points:</td>\n                <td>{totalPoints}</td>\n              </tr>\n            </tbody>\n          </table>\n        );\n      }}\n    </Consumer>\n  );\n}\n\nStats.propTypes = {\n  players: PropTypes.arrayOf(PropTypes.shape({\n    score: PropTypes.number\n  }))\n};\n\nexport default Stats;\n","import React, { Component } from 'react';\n\nclass Stopwatch extends Component {\n\n  state = {\n    isRunning: false,\n    elapsedTime: 0,\n    previousTime: 0\n  };\n\n  componentDidMount() {\n    this.intervalId = setInterval(() => this.tick(), 100)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  tick = () => {\n    if (this.state.isRunning) {\n      const now = Date.now();\n      this.setState( prevState => ({\n        previousTime: now,\n        elapsedTime: prevState.elapsedTime + (now - this.state.previousTime)\n      }));\n    }\n  }\n\n  handleStopWatch = () => {\n    this.setState( prevState => ({\n      isRunning: !prevState.isRunning\n    }));\n    if (!this.state.isRunning) {\n      this.setState({ previousTime: Date.now() });\n    }\n  }\n\n  handleReset = () => {\n    this.setState({ elapsedTime: 0 });\n  }\n\n  render() {\n    const seconds = Math.floor(this.state.elapsedTime / 1000);\n    return (\n      <div className=\"stopwatch\">\n        <h2>Stopwatch</h2>\n        <span className=\"stopwatch-time\">{seconds}</span>\n        <button onClick={this.handleStopWatch}>\n          { this.state.isRunning ? 'Stop' : 'Start' }</button>\n        <button onClick={this.handleReset}>Reset</button>\n      </div>\n    );\n  }\n}\nexport default Stopwatch;\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport Stats from './Stats'\nimport Stopwatch from './Stopwatch'\n\nconst Header = ({ title }) => {\n  return (\n    <header>\n      <Stats />\n      <h1>{ title }</h1>\n      <Stopwatch />\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer } from './Context';\n\nconst Counter = ({ index, score }) => {\n  return (\n    <Consumer>\n      { context => {\n        return(\n          <div className=\"counter\">\n            <button className=\"counter-action decrement\" onClick={() => context.actions.changeScore(index, -1)} > - </button>\n            <span className=\"counter-score\">{ score }</span>\n            <button className=\"counter-action increment\" onClick={() => context.actions.changeScore(index, 1)}> + </button>\n          </div>\n        )\n      }}\n    </Consumer>\n  );\n}\nCounter.propTypes = {\n  index: PropTypes.number,\n  score: PropTypes.number\n};\n\nexport default Counter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Icon = (props) => {\n  return (\n    <svg viewBox=\"0 0 44 35\" className={ props.isHighScore ? 'is-high-score' : null }>\n      <path d=\"M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z\" transform=\"translate(0 0.301727)\"/>\n      <rect width=\"30.4986\" height=\"3.07759\" transform=\"translate(6.56987 31.5603)\"/>\n    </svg>\n  );\n}\n\nIcon.propTypes = {\n  isHighScore: PropTypes.bool\n};\n\nexport default Icon;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer } from './Context';\nimport Counter from './Counter';\nimport Icon from './Icon';\n\nclass Player extends PureComponent {\n\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n    id: PropTypes.number.isRequired,\n    index: PropTypes.number.isRequired,\n    isHighScore: PropTypes.bool\n  };\n\n  render() {\n\n    const {\n      name,\n      id,\n      score,\n      index\n    } = this.props;\n\n    return (\n      <div className=\"player\">\n         <Consumer>\n        { context => {\n          return (\n            <span className=\"player-name\">\n              <button className=\"remove-player\" onClick={() => context.actions.removePlayer(id)}>âœ–</button>\n              <Icon isHighScore={this.props.isHighScore}/>\n              { name }\n            </span>\n          );\n        }}\n      </Consumer>\n\n        <Counter\n          score={score}\n          index={index}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Player;\n","import React from 'react';\nimport { Consumer } from './Context';\n\nconst AddPlayerForm = () => {\n\n  let playerInput = React.createRef();\n\n  return (\n    <Consumer>\n      { context => {\n         let handleSubmit = (e) => {\n          e.preventDefault();\n          context.actions.addPlayer(playerInput.current.value);\n          e.currentTarget.reset();\n        }\n        return (\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              ref={playerInput}\n              placeholder=\"Enter a player's name\"\n            />\n            <input\n              type=\"submit\"\n              value=\"Add Player\"\n            />\n          </form>\n        );\n      }}\n    </Consumer>\n  );\n}\nexport default AddPlayerForm;\n","import React, { Component } from 'react';\nimport { Provider } from './Context';\nimport Header from './Header';\nimport Player from './Player';\nimport AddPlayerForm from './AddPlayerForm';\n\nclass App extends Component {\n  state = {\n    players: [\n      {\n        name: \"Kithu\",\n        score: 0,\n        id: 1\n      },\n      {\n        name: \"Waweru\",\n        score: 0,\n        id: 2\n      },\n      {\n        name: \"Njiru\",\n        score: 0,\n        id: 3\n      },\n      {\n        name: \"James\",\n        score: 0,\n        id: 4\n      }\n    ]\n  };\n\n  // player id counter\n  prevPlayerId = 4;\n\n  handleScoreChange = (index, diff) => {\n    this.setState( prevState => {\n      // copy the previous players state\n      const updatedPlayers = [ ...prevState.players ];\n      // copy the target player object\n      const updatedPlayer = { ...updatedPlayers[index] };\n      // update the target players's score\n      updatedPlayer.score += diff;\n      // update the players array with the target player's latest score\n      updatedPlayers[index] = updatedPlayer;\n      //update the players state without mutating the original state\n      return {\n        players: updatedPlayers\n      }\n    });\n  }\n\n  handleAddPlayer = (name) => {\n    let newPlayer = {\n      name,\n      score: 0,\n      id: this.prevPlayerId +=1\n    }\n    this.setState( prevState => ({\n      ...prevState.players,\n      Players: prevState.players.concat(newPlayer)\n    }));\n    this.setState( prevState => {\n      return {\n        players: [\n          ...prevState.players,\n          {\n            name,\n            score: 0,\n            id: this.prevPlayerId += 1\n          }\n        ]\n      };\n    });\n  }\n\n  handleRemovePlayer = (id) => {\n    this.setState( prevState => {\n      return {\n        players: prevState.players.filter(p => p.id !== id)\n      };\n    });\n  }\n\n  getHighScore = () => {\n    const scores = this.state.players.map( p => p.score );\n    const highScore = Math.max(...scores);\n    if (highScore) {\n      return highScore;\n    }\n    return null;\n  }\n\n  render() {\n    const highScore = this.getHighScore();\n\n    return (\n      <Provider value={{\n        players: this.state.players,\n        actions: {\n          changeScore: this.handleScoreChange,\n          removePlayer: this.handleRemovePlayer,\n          addPlayer: this.handleAddPlayer\n        }\n      }}>\n        <div className=\"scoreboard\">\n          <Header\n            title=\"Scoreboard\"\n          />\n\n          {/* Players list */}\n          {this.state.players.map( (player, index) =>\n            <Player\n              name={player.name}\n              score={player.score}\n              index={index}\n              id={player.id}\n              key={player.id.toString()}\n              isHighScore={highScore === player.score}\n            />\n          )}\n\n          <AddPlayerForm />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}